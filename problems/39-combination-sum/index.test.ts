import { combinationSum } from "./index";

// You can call combinationSum here with manual or parsed input.
const testCases = [
  [
    [[2, 3, 6, 7], 7],
    [[2, 2, 3], [7]],
  ],
  [
    [[2, 3, 5], 8],
    [
      [2, 2, 2, 2],
      [2, 3, 3],
      [3, 5],
    ],
  ],
  [[[2], 1], []],
  [
    [[3, 5, 7], 10],
    [
      [3, 7],
      [5, 5],
    ],
  ],
  [
    [[5, 10, 8, 4, 3, 12, 9], 27],
    [
      [5, 5, 5, 5, 4, 3],
      [5, 5, 5, 8, 4],
      [5, 5, 5, 4, 4, 4],
      [5, 5, 5, 3, 3, 3, 3],
      [5, 5, 5, 3, 9],
      [5, 5, 5, 12],
      [5, 5, 10, 4, 3],
      [5, 5, 8, 3, 3, 3],
      [5, 5, 8, 9],
      [5, 5, 4, 4, 3, 3, 3],
      [5, 5, 4, 4, 9],
      [5, 10, 8, 4],
      [5, 10, 4, 4, 4],
      [5, 10, 3, 3, 3, 3],
      [5, 10, 3, 9],
      [5, 10, 12],
      [5, 8, 8, 3, 3],
      [5, 8, 4, 4, 3, 3],
      [5, 4, 4, 4, 4, 3, 3],
      [5, 4, 3, 3, 3, 3, 3, 3],
      [5, 4, 3, 3, 3, 9],
      [5, 4, 3, 3, 12],
      [5, 4, 9, 9],
      [10, 10, 4, 3],
      [10, 8, 3, 3, 3],
      [10, 8, 9],
      [10, 4, 4, 3, 3, 3],
      [10, 4, 4, 9],
      [8, 8, 8, 3],
      [8, 8, 4, 4, 3],
      [8, 4, 4, 4, 4, 3],
      [8, 4, 3, 3, 3, 3, 3],
      [8, 4, 3, 3, 9],
      [8, 4, 3, 12],
      [4, 4, 4, 4, 4, 4, 3],
      [4, 4, 4, 3, 3, 3, 3, 3],
      [4, 4, 4, 3, 3, 9],
      [4, 4, 4, 3, 12],
      [3, 3, 3, 3, 3, 3, 3, 3, 3],
      [3, 3, 3, 3, 3, 3, 9],
      [3, 3, 3, 3, 3, 12],
      [3, 3, 3, 9, 9],
      [3, 3, 12, 9],
      [3, 12, 12],
      [9, 9, 9],
    ],
  ],
] satisfies [[number[], number], number[][]][];

describe("testing combinationSum", () => {
  test.each(testCases)("combinationSum(%s)", (input, output) => {
    expect(combinationSum(...input).length).toBe(output.length);
  });
});
